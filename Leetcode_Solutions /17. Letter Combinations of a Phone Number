class Solution {
    public List<String> letterCombinations(String digits) {
        
      return padRet("",digits);
    }
    // public ArrayList<String> helper(String p,String up)
    // {
    //     if(up.isEmpty())
    //     {
    //         ArrayList<String>list=new ArrayList<>();
    //         list.add(p);
    //         return list;
    //     }
    //     int ch=up.charAt(0)-'0';
    //     ArrayList<String>list=new ArrayList<>();
    //     for(int i=(ch-1)*3;i<ch*3;i++)
    //     {
    //         char cha=(char)('a'+i);
    //         list.addAll(helper(p + cha,up.substring(1)));
    //     }
    //     return list;
    // }
    ArrayList<String> padRet(String p, String up) {
        // if(up.length()==0)
        // {

        // }
    if (up.isEmpty()) {
        ArrayList<String> list = new ArrayList<>();
        if(p=="")
        {
            
            return list;
        }
        list.add(p);
        return list;
    }

    int digit = up.charAt(0) - '0'; // Convert character to digit
    ArrayList<String> list = new ArrayList<>();
    
    // Determine the range of characters based on the digit
      int startIndex = (digit - 2) * 3;
    if (digit == 8) {
        startIndex =(digit-2)*3+1;
    }
   if (digit == 9) {
        startIndex =(digit-2)*3+1;
    }
  

    // Special cases for digit 7 and 9
    int endIndex;
    if (digit == 7) {
        endIndex = startIndex + 4; // 'pqrs' -> 4 characters
    } else if (digit == 9) {
        endIndex = startIndex + 4; // 'wxyz' -> 4 characters
    } else {
        endIndex = startIndex + 3; // Other digits -> 3 characters
    }

    for (int i = startIndex; i < endIndex; i++) {
        char ch = (char) ('a' + i);
        list.addAll(padRet(p + ch, up.substring(1)));
    }
    

    return list;
}
    }
